{"version":3,"sources":["assets/noPosterSmall.png","api.js","Components/Loader.js","Components/Section.js","Components/Message.js","Components/Poster.js","Routes/Home/HomePresenter.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/TV/TVPresenter.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Components/Header.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["api","axios","create","baseURL","params","api_key","language","moviesApi","get","id","append_to_response","term","query","encodeURIComponent","tvApi","Container","styled","div","role","aria-label","Title","span","Grid","Section","title","children","Text","props","color","Message","text","Image","bgUrl","Rating","ImageContainer","Year","Poster","imageUrl","rating","year","isMovie","to","require","default","length","substring","HomePresenter","nowPlaying","popular","upcoming","loading","error","Helmet","Loader","map","movie","poster_path","original_title","vote_average","release_date","HomeContainer","state","a","data","results","upComing","this","setState","Component","TVPresenter","topRated","airingToday","show","original_name","first_air_date","TVContainer","airingTday","React","Header","header","List","ul","Item","li","current","SLink","Link","withRouter","pathname","location","Form","form","Input","input","Btn","button","SearchPresenter","movieResults","tvResults","searchTerm","handleSubmit","updateTerm","onSubmit","placeholder","value","onChange","SearchContainer","event","preventDefault","searchByTerm","target","Backdrop","bgImage","Content","Cover","Data","h3","ItemContainer","Divider","CountryContainerBig","exist","CountryContainer","Overview","p","BtnContainer","ReviewBtn","UnderContainerBig","UnderContainer","YtContainer","A","Icon","Youtube","img","SrContainer","SeasonTitle","Seasons","baseUrl","DetailPresenter","result","backdrop_path","runtime","episode_run_time","genres","genre","index","name","production_companies","production_countries","country","company","overview","href","imdb_id","rel","homepage","videos","key","src","alt","seasons","season","season_number","DetailContainer","includes","match","push","history","parsedId","parseInt","isNaN","route","path","exact","component","Home","TV","Search","Detail","from","globalStyles","createGlobalStyle","reset","App","GlobalStyles","Router","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bb2ebc14.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/noPosterSmall.20487efd.png\";","import axios from \"axios\";\r\n\r\nconst api = axios.create({\r\n  baseURL: \"https://api.themoviedb.org/3/\",\r\n  params: {\r\n    api_key: \"45a302a18bc67c7cbfdd5461cd759a26\",\r\n    language: \"en-US\",\r\n  },\r\n});\r\n\r\nexport const moviesApi = {\r\n  nowPlaying: () => api.get(\"/movie/now_playing\"),\r\n  upComing: () => api.get(\"/movie/upcoming\"),\r\n  popular: () => api.get(\"/movie/popular\"),\r\n  movieDetail: (id) =>\r\n    api.get(`/movie/${id}`, {\r\n      params: {\r\n        append_to_response: \"videos\",\r\n      },\r\n    }),\r\n  search: (term) =>\r\n    api.get(\"/search/movie\", {\r\n      params: {\r\n        query: encodeURIComponent(term),\r\n      },\r\n    }),\r\n};\r\n\r\nexport const tvApi = {\r\n  topRated: () => api.get(\"/tv/top_rated\"),\r\n  popular: () => api.get(\"/tv/popular\"),\r\n  airingToday: () => api.get(\"/tv/airing_today\"),\r\n  showDetail: (id) =>\r\n    api.get(`/tv/${id}`, {\r\n      params: {\r\n        append_to_response: \"videos\",\r\n      },\r\n    }),\r\n  search: (term) =>\r\n    api.get(\"/search/tv\", {\r\n      params: {\r\n        query: encodeURIComponent(term),\r\n      },\r\n    }),\r\n};\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  height: 100vh;\r\n  width: 100vw;\r\n  display: flex;\r\n  justify-content: center;\r\n  font-size: 28px;\r\n  margin-top: 20px;\r\n`;\r\n\r\nexport default () => (\r\n  <Container>\r\n    <span role=\"img\" aria-label=\"Loading\">\r\n      ⏰\r\n    </span>\r\n  </Container>\r\n);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  :not(:last-child) {\r\n    margin-top: 20px;\r\n    margin-bottom: 50px;\r\n  }\r\n`;\r\n\r\nconst Title = styled.span`\r\n  font-size: 14px;\r\n  font-weight: 600;\r\n`;\r\n\r\nconst Grid = styled.div`\r\n  margin-top: 25px;\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, 125px);\r\n  grid-gap: 25px;\r\n`;\r\n\r\nconst Section = ({ title, children }) => (\r\n  <Container>\r\n    <Title>{title}</Title>\r\n    <Grid>{children}</Grid>\r\n  </Container>\r\n);\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.oneOfType([\r\n    PropTypes.arrayOf(PropTypes.node),\r\n    PropTypes.node,\r\n  ]),\r\n};\r\n\r\nexport default Section;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  width: 100vw;\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\nconst Text = styled.span`\r\n  color: ${(props) => props.color};\r\n  font-weight: 600;\r\n`;\r\n\r\nconst Message = ({ text, color }) => (\r\n  <Container>\r\n    <Text color={color}>{text}</Text>\r\n  </Container>\r\n);\r\n\r\nMessage.propTypes = {\r\n  text: PropTypes.string.isRequired,\r\n  color: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Message;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Container = styled.div`\r\n  font-size: 12px;\r\n`;\r\n\r\nconst Image = styled.div`\r\n  background-image: url(${(props) => props.bgUrl});\r\n  height: 180px;\r\n  background-size: cover;\r\n  border-radius: 4px;\r\n  background-position: center center;\r\n  transition: opacity 0.1s linear;\r\n`;\r\n\r\nconst Rating = styled.span`\r\n  position: absolute;\r\n  bottom: 5px;\r\n  right: 5px;\r\n  opacity: 0;\r\n  transition: opacity 0.1s linear;\r\n`;\r\n\r\nconst ImageContainer = styled.div`\r\n  margin-bottom: 5px;\r\n  position: relative;\r\n  &:hover {\r\n    ${Image} {\r\n      opacity: 0.3;\r\n    }\r\n    ${Rating} {\r\n      opacity: 1;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Title = styled.span`\r\n  display: block;\r\n  margin-bottom: 3px;\r\n  font-size: 12px;\r\n  line-height: 14px;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  white-space: nowrap;\r\n  width: 100%;\r\n`;\r\n\r\nconst Year = styled.span`\r\n  font-size: 10px;\r\n  color: rgba(255, 255, 255, 0.5);\r\n`;\r\n\r\nconst Poster = ({ id, imageUrl, title, rating, year, isMovie = false }) => (\r\n  <Link to={isMovie ? `/movie/${id}` : `/show/${id}`}>\r\n    <Container>\r\n      <ImageContainer>\r\n        <Image\r\n          bgUrl={\r\n            imageUrl\r\n              ? `https://image.tmdb.org/t/p/w300${imageUrl}`\r\n              : require(\"../assets/noPosterSmall.png\").default\r\n          }\r\n        ></Image>\r\n        <Rating>\r\n          <span role=\"img\" aria-label=\"rating\">\r\n            ⭐\r\n          </span>{\" \"}\r\n          {rating}/10\r\n        </Rating>\r\n      </ImageContainer>\r\n      <Title>\r\n        {title && title.length > 0 && title.length > 18\r\n          ? `${title.substring(0, 15)}...`\r\n          : title}\r\n      </Title>\r\n      <Year>{year}</Year>\r\n    </Container>\r\n  </Link>\r\n);\r\n\r\nPoster.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  imageUrl: PropTypes.string,\r\n  title: PropTypes.string.isRequired,\r\n  rating: PropTypes.number,\r\n  year: PropTypes.string,\r\n  isMovie: PropTypes.bool,\r\n};\r\n\r\nexport default Poster;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Helmet from \"react-helmet\";\r\nimport Loader from \"Components/Loader\";\r\nimport Section from \"Components/Section\";\r\nimport Message from \"Components/Message\";\r\nimport Poster from \"Components/Poster\";\r\n\r\nconst Container = styled.div`\r\n  padding: 0px 20px;\r\n`;\r\n\r\nconst HomePresenter = ({ nowPlaying, popular, upcoming, loading, error }) => (\r\n  <>\r\n    <Helmet>\r\n      <title>Movies | Nomflix</title>\r\n    </Helmet>\r\n    {loading ? (\r\n      <Loader />\r\n    ) : (\r\n      <Container>\r\n        <Helmet>\r\n          <title>Movies | Nomflix</title>\r\n        </Helmet>\r\n        {nowPlaying && nowPlaying.length > 0 && (\r\n          <Section title=\"Now Playing\">\r\n            {nowPlaying.map((movie) => (\r\n              <Poster\r\n                key={movie.id}\r\n                id={movie.id}\r\n                imageUrl={movie.poster_path}\r\n                title={movie.original_title}\r\n                rating={movie.vote_average}\r\n                year={movie.release_date.substring(0, 4)}\r\n                isMovie={true}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {upcoming && upcoming.length > 0 && (\r\n          <Section title=\"Upcoming Movies\">\r\n            {upcoming.map((movie) => (\r\n              <Poster\r\n                key={movie.id}\r\n                id={movie.id}\r\n                imageUrl={movie.poster_path}\r\n                title={movie.original_title}\r\n                rating={movie.vote_average}\r\n                year={movie.release_date.substring(0, 4)}\r\n                isMovie={true}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {popular && popular.length > 0 && (\r\n          <Section title=\"Popular Movies\">\r\n            {popular.map((movie) => (\r\n              <Poster\r\n                key={movie.id}\r\n                id={movie.id}\r\n                imageUrl={movie.poster_path}\r\n                title={movie.original_title}\r\n                rating={movie.vote_average}\r\n                year={movie.release_date.substring(0, 4)}\r\n                isMovie={true}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {error && <Message color=\"#e74c3c\" text={error} />}\r\n      </Container>\r\n    )}\r\n  </>\r\n);\r\n\r\nHomePresenter.propTypes = {\r\n  nowPlaying: PropTypes.array,\r\n  popular: PropTypes.array,\r\n  upcoming: PropTypes.array,\r\n  loading: PropTypes.bool.isRequired,\r\n  error: PropTypes.string,\r\n};\r\n\r\nexport default HomePresenter;\r\n","import HomeContainer from \"./HomeContainer\";\r\n\r\nexport default HomeContainer;\r\n","import { moviesApi } from \"api\";\r\nimport React, { Component } from \"react\";\r\nimport HomePresenter from \"./HomePresenter\";\r\n\r\nexport default class HomeContainer extends Component {\r\n  state = {\r\n    nowPlaying: null,\r\n    upcoming: null,\r\n    popular: null,\r\n    error: null,\r\n    loading: true,\r\n  };\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      const {\r\n        data: { results: nowPlaying },\r\n      } = await moviesApi.nowPlaying();\r\n      const {\r\n        data: { results: upComing },\r\n      } = await moviesApi.upComing();\r\n      const {\r\n        data: { results: popular },\r\n      } = await moviesApi.popular();\r\n      this.setState({\r\n        nowPlaying,\r\n        upComing,\r\n        popular,\r\n      });\r\n    } catch {\r\n      this.setState({\r\n        error: \"Can't find movies information.\",\r\n      });\r\n    } finally {\r\n      this.setState({\r\n        loading: false,\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { nowPlaying, upcoming, popular, error, loading } = this.state;\r\n    return (\r\n      <HomePresenter\r\n        nowPlaying={nowPlaying}\r\n        upcoming={upcoming}\r\n        popular={popular}\r\n        error={error}\r\n        loading={loading}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Helmet from \"react-helmet\";\r\nimport Section from \"../../Components/Section\";\r\nimport Loader from \"../../Components/Loader\";\r\nimport Message from \"Components/Message\";\r\nimport Poster from \"Components/Poster\";\r\n\r\nconst Container = styled.div`\r\n  padding: 0px 20px;\r\n`;\r\n\r\nconst TVPresenter = ({ topRated, popular, airingToday, loading, error }) => (\r\n  <>\r\n    <Helmet>\r\n      <title>TV Shows | Nomflix</title>\r\n    </Helmet>\r\n    {loading ? (\r\n      <Loader />\r\n    ) : (\r\n      <Container>\r\n        {topRated && topRated.length > 0 && (\r\n          <Section title=\"Top Rated Shows\">\r\n            {topRated.map((show) => (\r\n              <Poster\r\n                key={show.id}\r\n                id={show.id}\r\n                imageUrl={show.poster_path}\r\n                title={show.original_name}\r\n                rating={show.vote_average}\r\n                year={show.first_air_date.substring(0, 4)}\r\n                isMovie={false}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {popular && popular.length > 0 && (\r\n          <Section title=\"Popular Shows\">\r\n            {popular.map((show) => (\r\n              <Poster\r\n                key={show.id}\r\n                id={show.id}\r\n                imageUrl={show.poster_path}\r\n                title={show.original_name}\r\n                rating={show.vote_average}\r\n                year={show.first_air_date.substring(0, 4)}\r\n                isMovie={false}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {airingToday && airingToday.length > 0 && (\r\n          <Section title=\"Airing Today\">\r\n            {airingToday.map((show) => (\r\n              <Poster\r\n                key={show.id}\r\n                id={show.id}\r\n                imageUrl={show.poster_path}\r\n                title={show.original_name}\r\n                rating={show.vote_average}\r\n                year={show.first_air_date.substring(0, 4)}\r\n                isMovie={false}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {error && <Message color=\"#e74c3c\" text={error} />}\r\n      </Container>\r\n    )}\r\n    ;\r\n  </>\r\n);\r\n\r\nTVPresenter.propTypes = {\r\n  topRated: PropTypes.array,\r\n  popular: PropTypes.array,\r\n  airingToday: PropTypes.array,\r\n  loading: PropTypes.bool.isRequired,\r\n  error: PropTypes.string,\r\n};\r\n\r\nexport default TVPresenter;\r\n","import TVContainer from \"./TVContainer\";\r\n\r\nexport default TVContainer;\r\n","import { tvApi } from \"api\";\r\nimport React from \"react\";\r\nimport TVPresenter from \"./TVPresenter\";\r\n\r\nexport default class TVContainer extends React.Component {\r\n  state = {\r\n    topRated: null,\r\n    popular: null,\r\n    airingToday: null,\r\n    loading: true,\r\n    error: null,\r\n  };\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      const {\r\n        data: { results: topRated },\r\n      } = await tvApi.topRated();\r\n      const {\r\n        data: { results: popular },\r\n      } = await tvApi.popular();\r\n      const {\r\n        data: { results: airingToday },\r\n      } = await tvApi.airingToday();\r\n      this.setState({\r\n        topRated,\r\n        popular,\r\n        airingToday,\r\n      });\r\n    } catch {\r\n      this.setState({\r\n        error: \"Can't find movies information.\",\r\n      });\r\n    } finally {\r\n      this.setState({\r\n        loading: false,\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { topRated, popular, airingToday, loading, error } = this.state;\r\n    return (\r\n      <TVPresenter\r\n        topRated={topRated}\r\n        popular={popular}\r\n        airingTday={airingToday}\r\n        loading={loading}\r\n        error={error}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Header = styled.header`\r\n  color: white;\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 50px;\r\n  display: flex;\r\n  align-items: center;\r\n  background-color: rgba(20, 20, 20, 0.8);\r\n  z-index: 10;\r\n  box-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 0.8);\r\n`;\r\n\r\nconst List = styled.ul`\r\n  display: flex;\r\n`;\r\n\r\nconst Item = styled.li`\r\n  width: 80px;\r\n  height: 50px;\r\n  text-align: center;\r\n  border-bottom: 3px solid\r\n    ${(props) => (props.current ? \"#3498db\" : \"transparent\")};\r\n  transition: border-bottom 0.5s ease-in-out;\r\n`;\r\n\r\nconst SLink = styled(Link)`\r\n  height: 50px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nconst header = ({ location: { pathname } }) => (\r\n  <Header>\r\n    <List>\r\n      <Item current={pathname === \"/\"}>\r\n        <SLink to=\"/\">Movies</SLink>\r\n      </Item>\r\n      <Item current={pathname === \"/tv\"}>\r\n        <SLink to=\"/tv\">TV</SLink>\r\n      </Item>\r\n      <Item current={pathname === \"/search\"}>\r\n        <SLink to=\"/search\">Search</SLink>\r\n      </Item>\r\n    </List>\r\n  </Header>\r\n);\r\n\r\nexport default withRouter(header);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Helmet from \"react-helmet\";\r\nimport Loader from \"Components/Loader\";\r\nimport Section from \"Components/Section\";\r\nimport Message from \"Components/Message\";\r\nimport Poster from \"Components/Poster\";\r\nimport { FaSearch } from \"react-icons/fa\";\r\n\r\nconst Container = styled.div`\r\n  padding: 10px 20px;\r\n`;\r\n\r\nconst Form = styled.form`\r\n  display: flex;\r\n  margin-bottom: 50px;\r\n  width: 100%;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  all: unset;\r\n  text-align: center;\r\n  font-size: 28px;\r\n  width: 25%;\r\n  border-bottom: 1px solid white;\r\n  margin-right: 10px;\r\n`;\r\n\r\nconst Btn = styled.button`\r\n  all: unset;\r\n  margin-top: 5px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-color: #3498db;\r\n  font-size: 17px;\r\n  opacity: 0.9;\r\n  height: 3em;\r\n  width: 4rem;\r\n  color: white;\r\n  cursor: pointer;\r\n  border-radius: 2px;\r\n  &:hover {\r\n    background: #3498db;\r\n    opacity: 0.3;\r\n  }\r\n`;\r\n\r\nconst SearchPresenter = ({\r\n  movieResults,\r\n  tvResults,\r\n  loading,\r\n  searchTerm,\r\n  handleSubmit,\r\n  error,\r\n  updateTerm,\r\n}) => (\r\n  <Container>\r\n    <Helmet>\r\n      <title>Search | Nomflix</title>\r\n    </Helmet>\r\n    <Form onSubmit={handleSubmit}>\r\n      <Input\r\n        placeholder=\"Search Movies or TV Shows..\"\r\n        value={searchTerm}\r\n        onChange={updateTerm}\r\n      />\r\n      <Btn>\r\n        <FaSearch></FaSearch>\r\n      </Btn>\r\n    </Form>\r\n    {loading ? (\r\n      <Loader />\r\n    ) : (\r\n      <>\r\n        {movieResults && movieResults.length > 0 && (\r\n          <Section title=\"Movie Results\">\r\n            {movieResults.map((movie) => (\r\n              <Poster\r\n                key={movie.id}\r\n                id={movie.id}\r\n                imageUrl={movie.poster_path}\r\n                title={movie.original_title}\r\n                rating={movie.vote_average}\r\n                year={\r\n                  movie &&\r\n                  movie.length > 0 &&\r\n                  movie.release_date.substring(0, 4)\r\n                }\r\n                isMovie={true}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {tvResults && tvResults.length > 0 && (\r\n          <Section title=\"TV show Results\">\r\n            {tvResults.map((show) => (\r\n              <Poster\r\n                key={show.id}\r\n                id={show.id}\r\n                imageUrl={show.poster_path}\r\n                title={show.original_title}\r\n                rating={show.vote_average}\r\n                year={\r\n                  show && show.length > 0 && show.first_air_date.substring(0, 4)\r\n                }\r\n                isMovie={false}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {error && <Message color=\"#e74c3c\" text={error} />}\r\n        {tvResults &&\r\n          movieResults &&\r\n          tvResults.length === 0 &&\r\n          movieResults.length === 0 && (\r\n            <Message text=\"Nothing found\" color=\"#95a5a6\" />\r\n          )}\r\n      </>\r\n    )}\r\n  </Container>\r\n);\r\n\r\nSearchPresenter.propTypes = {\r\n  movieResults: PropTypes.array,\r\n  tvResults: PropTypes.array,\r\n  error: PropTypes.string,\r\n  searchTerm: PropTypes.string,\r\n  loading: PropTypes.bool.isRequired,\r\n  handleSubmit: PropTypes.func.isRequired,\r\n  updateTerm: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default SearchPresenter;\r\n","import SearchContainer from \"./SearchContainer\";\r\n\r\nexport default SearchContainer;\r\n","import { moviesApi, tvApi } from \"api\";\r\nimport React from \"react\";\r\nimport SearchPresenter from \"./SearchPresenter\";\r\n\r\nexport default class SearchContainer extends React.Component {\r\n  state = {\r\n    movieResults: null,\r\n    tvResults: null,\r\n    searchTerm: \"\",\r\n    loading: false,\r\n    error: null,\r\n  };\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const { searchTerm } = this.state;\r\n    if (searchTerm !== \"\") {\r\n      this.searchByTerm();\r\n    }\r\n  };\r\n\r\n  updateTerm = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    this.setState({\r\n      searchTerm: value,\r\n    });\r\n  };\r\n\r\n  searchByTerm = async () => {\r\n    const { searchTerm } = this.state;\r\n    this.setState({ loading: true });\r\n    try {\r\n      const {\r\n        data: { results: movieResults },\r\n      } = await moviesApi.search(searchTerm);\r\n      const {\r\n        data: { results: tvResults },\r\n      } = await tvApi.search(searchTerm);\r\n      this.setState({\r\n        movieResults,\r\n        tvResults,\r\n      });\r\n    } catch {\r\n      this.setState({ error: \"Can't find results.\" });\r\n    } finally {\r\n      this.setState({ loading: false });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { movieResults, tvResults, searchTerm, loading, error } = this.state;\r\n    return (\r\n      <SearchPresenter\r\n        movieResults={movieResults}\r\n        tvResults={tvResults}\r\n        loading={loading}\r\n        error={error}\r\n        searchTerm={searchTerm}\r\n        handleSubmit={this.handleSubmit}\r\n        updateTerm={this.updateTerm}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Helmet from \"react-helmet\";\r\nimport Loader from \"Components/Loader\";\r\nimport { FaYoutube } from \"react-icons/fa\";\r\n\r\nconst Container = styled.div`\r\n  height: calc(100vh - 50px);\r\n  width: 100%;\r\n  position: relative;\r\n  padding: 50px;\r\n`;\r\n\r\nconst Backdrop = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-image: url(${(props) => props.bgImage});\r\n  background-position: center center;\r\n  background-size: cover;\r\n  filter: blur(2px);\r\n  opacity: 0.5;\r\n  z-index: 0;\r\n`;\r\n\r\nconst Content = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n  z-index: 1;\r\n`;\r\n\r\nconst Cover = styled.div`\r\n  width: 30%;\r\n  background-image: url(${(props) => props.bgImage});\r\n  background-position: center center;\r\n  background-size: cover;\r\n  max-height: 100%;\r\n  border-radius: 5px;\r\n  min-width: 300px;\r\n`;\r\n\r\nconst Data = styled.div`\r\n  width: 70%;\r\n  height: 99%;\r\n  margin-left: 20px;\r\n  min-width: 50rem;\r\n`;\r\n\r\nconst Title = styled.h3`\r\n  font-size: 32px;\r\n  font-weight: 700;\r\n`;\r\n\r\nconst ItemContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  margin: 20px 0;\r\n  position: relative;\r\n`;\r\n\r\nconst Item = styled.span``;\r\n\r\nconst Divider = styled.span`\r\n  margin: 0 10px;\r\n`;\r\n\r\nconst CountryContainerBig = styled.div`\r\n  position: relative;\r\n  width: ${(props) => (props.exist ? \"100px\" : \"\")};\r\n  height: ${(props) => (props.exist ? \"20px\" : \"\")};\r\n  border-radius: 3px;\r\n  overflow: hidden;\r\n  &:hover {\r\n    overflow: visible;\r\n  }\r\n  margin-right: 5px;\r\n`;\r\nconst CountryContainer = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  line-height: 17px;\r\n  &:hover {\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    height: ${(props) => props.length * 98 + \"%\"};\r\n    overflow: auto;\r\n    background-color: black;\r\n  }\r\n  border: 1px #fff solid;\r\n  padding-left: 5px;\r\n  padding-top: 1px;\r\n  border-radius: 3px;\r\n`;\r\n\r\nconst Overview = styled.p`\r\n  font-size: 12px;\r\n  color: rgba(255, 255, 255, 0.8);\r\n  line-height: 1.5; //위아래 여백\r\n  width: 70%;\r\n  margin-bottom: 30px;\r\n  height: 10%;\r\n  overflow: auto;\r\n`;\r\n\r\nconst BtnContainer = styled.div`\r\n  margin-left: 15px;\r\n  display: flex;\r\n  height: 7%;\r\n  margin-bottom: 30px;\r\n`;\r\n\r\nconst ReviewBtn = styled.div`\r\n  padding: 10px 5px;\r\n  font-size: 13px;\r\n  border: 1px #fff solid;\r\n  border-radius: 3px;\r\n  margin-right: 30px;\r\n  width: 140px;\r\n  text-align: center;\r\n  color: #fff !important;\r\n  background: rgba(255, 255, 255, 0.3);\r\n  font-weight: bold;\r\n  cursor: pointer;\r\n  &:hover {\r\n    background: rgba(255, 255, 255, 0.5);\r\n  }\r\n`;\r\nconst UnderContainerBig = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  height: 60%;\r\n`;\r\n\r\nconst UnderContainer = styled.div`\r\n  display: flex;\r\n  background: rgba(255, 255, 255, 0.3);\r\n  width: 35%;\r\n  height: 100%;\r\n  border-radius: 4px;\r\n  max-height: 95%;\r\n`;\r\n\r\nconst YtContainer = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  justify-content: space-around;\r\n  padding: 5px 10px;\r\n  min-height: 200px;\r\n`;\r\n\r\nconst A = styled.a`\r\n  width: 100%;\r\n  height: 40%;\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nconst Icon = styled.span`\r\n  font-size: 25px;\r\n  opacity: 0.8;\r\n  margin-bottom: -5px;\r\n`;\r\n\r\nconst Youtube = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n  object-fit: cover;\r\n  max-width: 250px;\r\n  &:hover {\r\n    opacity: 0.8;\r\n  }\r\n`;\r\n\r\nconst SrContainer = styled.div`\r\n  background: rgba(255, 255, 255, 0.3);\r\n  width: 30%;\r\n  height: 95%;\r\n  display: flex;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  justify-content: space-around;\r\n  max-height: 95%;\r\n  &:hover {\r\n    width: calc(30% + 17px);\r\n    overflow: auto;\r\n  }\r\n  overflow: hidden;\r\n  margin-left: 15px;\r\n  padding-top: 25px;\r\n`;\r\n\r\nconst SeasonTitle = styled.span`\r\n  font-size: 15px;\r\n  font-weight: 600;\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nconst Seasons = styled.div`\r\n  &:hover {\r\n    opacity: 0.8;\r\n  }\r\n  width: 100%;\r\n  height: 80%;\r\n  background-image: url(${(props) => props.baseUrl});\r\n  background-position: center center;\r\n  background-size: cover;\r\n  cursor: pointer;\r\n  margin-bottom: 3px;\r\n`;\r\n\r\n// const Collections = styled.div`\r\n//   margin-top: 12px;\r\n//   width: 100%;\r\n//   height: 87%;\r\n//   background-image: url(${(props) => props.bgImage});\r\n//   background-position: center center;\r\n//   background-size: cover;\r\n//   border-radius: 5px;\r\n// `;\r\n\r\nconst DetailPresenter = ({ result, loading, error }) =>\r\n  loading ? (\r\n    <>\r\n      <Helmet>\r\n        <title>Loading | Nomflix</title>\r\n      </Helmet>\r\n      <Loader />\r\n    </>\r\n  ) : (\r\n    <Container>\r\n      <Helmet>\r\n        <title>\r\n          {result.original_title ? result.original_title : result.original_name}{\" \"}\r\n          | Nomflix\r\n        </title>\r\n      </Helmet>\r\n      <Backdrop\r\n        bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`}\r\n      />\r\n      <Content>\r\n        <Cover\r\n          bgImage={\r\n            result.poster_path\r\n              ? `https://image.tmdb.org/t/p/original${result.poster_path}`\r\n              : require(\"../../assets/noPosterSmall.png\").default\r\n          }\r\n        />\r\n        <Data>\r\n          <Title>\r\n            {result.original_title\r\n              ? result.original_title\r\n              : result.original_name}\r\n          </Title>\r\n          <ItemContainer>\r\n            <Item>\r\n              {result.release_date\r\n                ? result.release_date\r\n                  ? result.release_date.substring(0, 4)\r\n                  : result.first_air_date.substring(0, 4)\r\n                : \"\"}\r\n            </Item>\r\n            <Divider>{result.runtime ? \"•\" : \"\"}</Divider>\r\n            <Item>\r\n              {result.runtime\r\n                ? result.runtime >= 0\r\n                  ? result.runtime\r\n                  : result.episode_run_time[0]\r\n                : \"0\"}{\" \"}\r\n              min\r\n            </Item>\r\n            <Divider>{result.genres.length > 0 ? \"•\" : \"\"}</Divider>\r\n            <Item>\r\n              {result.genres &&\r\n                result.genres.map((genre, index) =>\r\n                  index === result.genres.length - 1\r\n                    ? genre.name\r\n                    : `${genre.name} / `\r\n                )}\r\n            </Item>\r\n            <Divider>{result.production_companies ? \"•\" : \"\"}</Divider>\r\n            <CountryContainerBig\r\n              exist={result.production_countries.length >= 1}\r\n            >\r\n              <CountryContainer length={result.production_countries.length}>\r\n                {result.production_countries.map((country, index) => (\r\n                  <div key={index}>\r\n                    {country.name.length > 13\r\n                      ? country.name.substring(0, 13) + \"..\"\r\n                      : country.name}\r\n                  </div>\r\n                ))}\r\n              </CountryContainer>\r\n            </CountryContainerBig>\r\n            <CountryContainerBig\r\n              exist={result.production_companies.length >= 1}\r\n            >\r\n              <CountryContainer length={result.production_companies.length}>\r\n                {result.production_companies.map((company, index) => (\r\n                  <div key={index}>\r\n                    {company.name.length > 13\r\n                      ? company.name.substring(0, 13) + \"..\"\r\n                      : company.name}\r\n                  </div>\r\n                ))}\r\n              </CountryContainer>\r\n            </CountryContainerBig>\r\n          </ItemContainer>\r\n          <Overview>{result.overview}</Overview>\r\n          <BtnContainer>\r\n            <a\r\n              href={`https://cinemaone.net/title/${result.imdb_id}?utm_source=pt&utm_medium=win&utm_campaign=skusat1`}\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n            >\r\n              <ReviewBtn>Read Review</ReviewBtn>\r\n            </a>\r\n            <a target=\"_blank\" href={result.homepage} rel=\"noopener noreferrer\">\r\n              <ReviewBtn>Go homepage</ReviewBtn>\r\n            </a>\r\n          </BtnContainer>\r\n          <UnderContainerBig>\r\n            <UnderContainer>\r\n              <YtContainer>\r\n                <Icon>\r\n                  <FaYoutube></FaYoutube>\r\n                </Icon>\r\n                <A\r\n                  target=\"_blank\"\r\n                  rel=\"noopener noreferrer\"\r\n                  href={\r\n                    result.videos.results.length >= 1\r\n                      ? `https://www.youtube.com/watch?v=${result.videos.results[0].key}`\r\n                      : \"https://www.youtube.com/\"\r\n                  }\r\n                >\r\n                  <Youtube\r\n                    src={\r\n                      result.videos.results.length >= 1\r\n                        ? `https://img.youtube.com/vi/${result.videos.results[0].key}/hqdefault.jpg`\r\n                        : require(\"../../assets/noPosterSmall.png\").default\r\n                    }\r\n                    alt={result.id}\r\n                  />\r\n                </A>\r\n                <A\r\n                  target=\"_blank\"\r\n                  rel=\"noopener noreferrer\"\r\n                  href={\r\n                    result.videos.results.length >= 2\r\n                      ? `https://www.youtube.com/watch?v=${result.videos.results[1].key}`\r\n                      : \"https://www.youtube.com/\"\r\n                  }\r\n                >\r\n                  <Youtube\r\n                    src={\r\n                      result.videos.results.length >= 2\r\n                        ? `https://img.youtube.com/vi/${result.videos.results[1].key}/hqdefault.jpg`\r\n                        : require(\"../../assets/noPosterSmall.png\").default\r\n                    }\r\n                    alt={result.id}\r\n                  />\r\n                </A>\r\n              </YtContainer>\r\n            </UnderContainer>\r\n            {result.seasons ? (\r\n              <SrContainer>\r\n                <SeasonTitle>Seasons</SeasonTitle>\r\n                {result.seasons.map((season) => (\r\n                  <Seasons\r\n                    baseUrl={\r\n                      season.poster_path === null\r\n                        ? require(\"../../assets/noPosterSmall.png\").default\r\n                        : \"https://image.tmdb.org/t/p/original\" +\r\n                          season.poster_path\r\n                    }\r\n                    name={season.name}\r\n                    id={season.id}\r\n                    season_number={season.season_number}\r\n                  />\r\n                ))}\r\n              </SrContainer>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </UnderContainerBig>\r\n        </Data>\r\n      </Content>\r\n    </Container>\r\n  );\r\n\r\nDetailPresenter.propTypes = {\r\n  result: PropTypes.object,\r\n  loading: PropTypes.bool.isRequired,\r\n  error: PropTypes.string,\r\n};\r\n\r\nexport default DetailPresenter;\r\n","import DetailContainer from \"./DetailContainer\";\r\n\r\nexport default DetailContainer;\r\n","import { moviesApi, tvApi } from \"api\";\r\nimport React from \"react\";\r\nimport DetailPresenter from \"./DetailPresenter\";\r\n\r\nexport default class DetailContainer extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const {\r\n      location: { pathname },\r\n    } = props;\r\n    this.state = {\r\n      result: null,\r\n      error: null,\r\n      loading: true,\r\n      isMovie: pathname.includes(\"/movie/\"),\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const {\r\n      match: {\r\n        params: { id },\r\n      },\r\n      history: { push },\r\n    } = this.props;\r\n    const { isMovie } = this.state;\r\n    const parsedId = parseInt(id);\r\n    if (isNaN(parsedId)) {\r\n      return push(\"/\");\r\n    }\r\n    let result = null;\r\n    try {\r\n      if (isMovie) {\r\n        ({ data: result } = await moviesApi.movieDetail(parsedId));\r\n      } else {\r\n        ({ data: result } = await tvApi.showDetail(parsedId));\r\n      }\r\n    } catch {\r\n      this.setState({ error: \"Can't find anything.\" });\r\n    } finally {\r\n      this.setState({ loading: false, result });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { result, error, loading } = this.state;\r\n    return <DetailPresenter result={result} error={error} loading={loading} />;\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport {\r\n  HashRouter as Router,\r\n  Route,\r\n  Redirect,\r\n  Switch,\r\n} from \"react-router-dom\";\r\nimport Home from \"Routes/Home\";\r\nimport TV from \"Routes/TV\";\r\nimport Header from \"Components/Header\";\r\nimport Search from \"Routes/Search\";\r\nimport Detail from \"Routes/Detail\";\r\n\r\nconst route = () => (\r\n  <Router>\r\n    <Header />\r\n    <Switch>\r\n      <Route path=\"/\" exact component={Home} />\r\n      <Route path=\"/tv\" component={TV} />\r\n      <Route path=\"/search\" component={Search} />\r\n      <Route path=\"/movie/:id\" component={Detail} />\r\n      <Route path=\"/show/:id\" component={Detail} />\r\n      <Redirect from=\"*\" to=\"/\" />\r\n    </Switch>\r\n  </Router>\r\n);\r\n\r\nexport default route;\r\n","import { createGlobalStyle } from \"styled-components\";\r\nimport { reset } from \"styled-reset\";\r\n\r\nconst globalStyles = createGlobalStyle`\r\n    ${reset};\r\n    a{\r\n        text-decoration:none;\r\n        color:inherit;\r\n    }\r\n    *{\r\n        box-sizing:border-box;\r\n    }\r\n    body{\r\n        font-family:--apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\r\n        font-size:12px;\r\n        color:white;\r\n        background-color: rgba(20,20,20,1);\r\n        padding-top: 50px;\r\n    }\r\n`;\r\n\r\nexport default globalStyles;\r\n","import React, { Component } from \"react\";\nimport Router from \"Components/Router\";\nimport GlobalStyles from \"Components/GlobalStyles\";\n\nclass App extends Component {\n  render() {\n    return (\n      <>\n        <GlobalStyles />\n        <Router />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"Components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}